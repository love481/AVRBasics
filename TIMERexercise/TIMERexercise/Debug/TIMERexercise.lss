
TIMERexercise.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000f0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000120  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000562  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004ea  00000000  00000000  000006de  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000018c  00000000  00000000  00000bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000d54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000303  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  0000107b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4c 00 	jmp	0x98	; 0x98 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void)
{    DDRA|=(1<<PINA0);
  6c:	d0 9a       	sbi	0x1a, 0	; 26
	OCR1A=975;
  6e:	8f ec       	ldi	r24, 0xCF	; 207
  70:	93 e0       	ldi	r25, 0x03	; 3
  72:	9b bd       	out	0x2b, r25	; 43
  74:	8a bd       	out	0x2a, r24	; 42
	   TCNT1=0;
  76:	1d bc       	out	0x2d, r1	; 45
  78:	1c bc       	out	0x2c, r1	; 44
	TCCR1B=(1<<CS10)|(1<<CS12);
  7a:	85 e0       	ldi	r24, 0x05	; 5
  7c:	8e bd       	out	0x2e, r24	; 46
	while(1)
	{while((TIFR & (1<<OCF1A))==0);
		PORTA^=(1<<PINA0);
  7e:	91 e0       	ldi	r25, 0x01	; 1
{    DDRA|=(1<<PINA0);
	OCR1A=975;
	   TCNT1=0;
	TCCR1B=(1<<CS10)|(1<<CS12);
	while(1)
	{while((TIFR & (1<<OCF1A))==0);
  80:	08 b6       	in	r0, 0x38	; 56
  82:	04 fe       	sbrs	r0, 4
  84:	fd cf       	rjmp	.-6      	; 0x80 <main+0x14>
		PORTA^=(1<<PINA0);
  86:	8b b3       	in	r24, 0x1b	; 27
  88:	89 27       	eor	r24, r25
  8a:	8b bb       	out	0x1b, r24	; 27
		  TCNT1=0;
  8c:	1d bc       	out	0x2d, r1	; 45
  8e:	1c bc       	out	0x2c, r1	; 44
		  TIFR|=(1<<OCF1A);
  90:	88 b7       	in	r24, 0x38	; 56
  92:	80 61       	ori	r24, 0x10	; 16
  94:	88 bf       	out	0x38, r24	; 56
int main(void)
{    DDRA|=(1<<PINA0);
	OCR1A=975;
	   TCNT1=0;
	TCCR1B=(1<<CS10)|(1<<CS12);
	while(1)
  96:	f4 cf       	rjmp	.-24     	; 0x80 <main+0x14>

00000098 <_exit>:
  98:	f8 94       	cli

0000009a <__stop_program>:
  9a:	ff cf       	rjmp	.-2      	; 0x9a <__stop_program>
